apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: celery
  name: celery
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      service: celery
  template:
    metadata:
      labels:
        service: celery
    spec:
      securityContext:
        fsGroup: 101 # fastapi group
      containers:
        - args: ["worker"]
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.app.image }}
          name: celery
          resources:
            requests:
              memory: "400Mi"
          volumeMounts:
            - mountPath: /app/media
              name: media
      restartPolicy: Always
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
      nodeSelector:
        node-type: stateless
      tolerations:
        - key: node-type
          operator: Equal
          value: stateless
          effect: NoSchedule
